openapi: 3.0.3
info:
  title: Argent Bank API
  description: Contains all available API endpoints in this codebase
  version: 1.0.0

########### SECURITY SCHEMES ###########
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

########### SCHEMA ###########
  schemas:
    Login:
      type: object
      properties:
        email:
          type: string
          description: user email.
        password:
          type: string
          description: user password.

    LoginResponse:
      type: object
      properties:
        token:
          type: string

    User:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string

    UserProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string

    ApiResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
    Account:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        balance:
          type: number
        type:
          type: string

    Category:
      type: object
      properties:
        category:
          type: string

    Note:
      type: object
      properties:
        notes:
          type: string
    Transaction:
          type: object
          properties:
            id:
              type: integer
            date:
              type: string
              format: date
            description:
              type: string
            amount:
              type: number
            balance:
              type: number
            category:
              type: string
            notes:
              type: string
servers:
  - url: http://localhost:3001/api/v1

paths:
########### LOGIN ###########
  /user/login:
    post:
      security:
        - bearerAuth: []
      tags:
       - User
      summary: Login
      description: API for Login
      requestBody:
        description: Login Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description:   Invalid Fields.
        '500':
          description: Internal Server Error.

########### SIGNUP ###########
  /user/signup:
    post:
      tags:
       - User
      summary: Signup
      description: API for Signup
      requestBody:
        description: Signup Payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Login Successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description:   Invalid Fields.
        '500':
          description: Internal Server Error.

########### PROFILE ###########
  /user/profile:
    post:
      tags:
       - User
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description:   Invalid Fields.
        '500':
          description: Internal Server Error.

    put:
      tags:
       - User
      summary: User Profile API
      description: API for fetching a user profile
      requestBody:
        description: Update user profile attributes
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile retrieved successully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid Fields.
        '500':
          description: Internal Server Error.

########### ACCOUNT ###########
  /user/accounts:
    get:
      tags:
        - Account
      summary: Accounts
      description: Get all accounts
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns all user accounts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '401':
          description: JWT expired or invalid.
        '500':
          description: Internal Server Error.

########### TRANSACTION ###########
  /user/accounts/{AccountId}/transactions:
    get:
      tags:
        - Transaction
      summary: Return all transactions from account
      description: Get all Transactions from account
      parameters:
        - name: AccountId
          in: path
          description: ID of account
          required: true
          schema :
            type: integer
            format: int64
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: An object array representing each transaction.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request. Account ID must be an integer.
        '401':
          description: JWT expired or invalid.
        '404':
          description: Transactions with the specified ID was not found.
        '500':
          description: Internal Server Error.

  /user/accounts/{AccountId}/transactions/{TransactionId}:
    get:
      tags:
        - Transaction
      summary: Get transaction details
      description: Get details of a specific transaction
      parameters:
        - name: AccountId
          in: path
          description: ID of account
          required: true
          schema:
            type: integer
            format: int64
        - name: TransactionId
          in: path
          description: ID of transaction
          required: true
          schema:
            type: integer
            format: int64
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Bad request. Transaction ID must be an integer.
        '401':
          description: JWT expired or invalid.
        '404':
          description: Transaction with the specified ID was not found.
        '500':
          description: Internal Server Error.
########### CATEGORY ###########
  /user/transactions/{TransactionId}/category:
    patch:
      tags:
        - Transaction
      summary: Update transaction
      description: Update transaction's category
      requestBody:
        description: Update transaction category
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      parameters:
        - name: TransactionId
          in: path
          description: ID of transaction
          required: true
          schema:
            type: integer
            format: int64
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transaction updated successfully.
        '400':
          description: Bad request. Transaction ID must be an integer.
        '401':
          description: JWT expired or invalid.
        '404':
          description: Transaction with the specified ID was not found.
        '500':
          description: Internal Server Error.

########### NOTE ###########
  /user/transactions/{TransactionId}/note:
    patch:
      tags:
        - Note
      summary: Note
      description: Create Note
      requestBody:
        description: Update transaction note
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      parameters:
        - name: TransactionId
          in: path
          description: ID of transaction
          required: true
          schema:
            type: integer
            format: int64
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Note successfully updated.
        '400':
          description: Bad request. Transaction ID must be an integer.
        '401':
          description: JWT expired or invalid.
        '404':
          description: Transaction with the specified ID was not found.
        '500':
          description: Internal Server Error.
